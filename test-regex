#!/usr/local/bin/perl6
use v6;
use GGE;

die "Usage: ./test-regex <pattern> <target>"
    unless @*ARGS == 2;

my ($pattern, $target) = @*ARGS;
my GGE::Match $match
    = GGE::Perl6Regex.new($pattern, :debug)\
                        .( backslash_escape($target), :debug );

say $match ?? $match.dump_str('mob', ' ', '') !! "No match\n";

sub backslash_escape($string) {
    # RAKUDO: No .trans again yet
    #return $string.trans(['\n', '\r', '\e', '\t', '\f'] =>
    #                     ["\n", "\r", "\e", "\t", "\f"])\
    return $string.subst(/\\n/, "\n", :g).subst(/\\r/, "\r", :g).subst(/\\e/, "\e", :g).subst(/\\t/, "\t", :g).subst(/\\f/, "\f", :g)\
                  .subst(/'\\x' (<[0..9a..f]>**{2..4})/, { chr(:16($0)) }, :g);
}
